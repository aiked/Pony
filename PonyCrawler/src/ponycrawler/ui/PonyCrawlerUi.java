/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ponycrawler.ui;

import java.io.File;
import java.util.Collection;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.SpinnerNumberModel;
import ponycrawler.core.CrawlerCore;
import ponycrawler.core.CrawlerListener;
import ponycrawler.core.PageInfo;

/**
 *
 * @author Apostolidis
 */
public class PonyCrawlerUi extends javax.swing.JFrame {
    private boolean forbiddenLinkesEnable;
    private File OutputFile;
    private boolean isFetching;
    private Thread fetchingThread;
    /**
     * Creates new form PonyCrawlerUi2
     */
    public PonyCrawlerUi() {
        initComponents();
        ListManager.AbstractToDefaultListModelConverter(startingLinks_links);
        ListManager.AbstractToDefaultListModelConverter(forbiddenLinks_links);
        isFetching = false;
        forbiddenLinkesEnable = false;
        forbiddenLinksPanel.setVisible(false);
        monitorPanel.setVisible(false);
        OutputFile = new File("sites");
        saveLocationLabel.setText(this.OutputFile.getAbsolutePath());
        parallelFetchesInput.setModel(new SpinnerNumberModel(8, 1, 512, 1));
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        startingLinks_addButton = new javax.swing.JButton();
        startingLinks_removeButton = new javax.swing.JButton();
        startingLinks_linkInput = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        startingLinks_links = new javax.swing.JList();
        UrlLabel = new javax.swing.JLabel();
        forbiddenLinksPanel = new javax.swing.JPanel();
        forbiddenLinks_addButton = new javax.swing.JButton();
        forbiddenLinks_removeButton = new javax.swing.JButton();
        forbiddenLinks_linkInput = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        forbiddenLinks_links = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        DepthLabel = new javax.swing.JLabel();
        saveLocationLabel = new javax.swing.JLabel();
        startFetchingButton = new javax.swing.JButton();
        parallelFetchesInput = new javax.swing.JSpinner();
        saveButton = new javax.swing.JButton();
        monitorPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        monitor_fetching = new javax.swing.JLabel();
        monitor_fail = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        monitor_success = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        monitor_error = new javax.swing.JLabel();
        forbitenLinks_enableButton = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pony Crawler");

        startingLinks_addButton.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        startingLinks_addButton.setText("add");
        startingLinks_addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startingLinks_addButtonClicked(evt);
            }
        });

        startingLinks_removeButton.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        startingLinks_removeButton.setText("remove");
        startingLinks_removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startingLinks_removeButtonClicked(evt);
            }
        });

        startingLinks_linkInput.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        startingLinks_linkInput.setText("http://");
        startingLinks_linkInput.setToolTipText("");

        startingLinks_links.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        startingLinks_links.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "http://www.in.gr/", "http://www.newsbeast.gr/" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        startingLinks_links.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(startingLinks_links);

        UrlLabel.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        UrlLabel.setText("Starting links");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(UrlLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(startingLinks_removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(startingLinks_addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(startingLinks_linkInput)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(UrlLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startingLinks_linkInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startingLinks_removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startingLinks_addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        forbiddenLinks_addButton.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        forbiddenLinks_addButton.setText("add");
        forbiddenLinks_addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forbiddenLinks_addButtonClicked(evt);
            }
        });

        forbiddenLinks_removeButton.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        forbiddenLinks_removeButton.setText("remove");
        forbiddenLinks_removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forbiddenLinks_removeButtonClicked(evt);
            }
        });

        forbiddenLinks_linkInput.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        forbiddenLinks_linkInput.setToolTipText("");
        forbiddenLinks_linkInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forbiddenLinks_linkInputActionPerformed(evt);
            }
        });

        forbiddenLinks_links.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        forbiddenLinks_links.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "facebook", "twitter", "google", "linkedin" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        forbiddenLinks_links.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(forbiddenLinks_links);

        javax.swing.GroupLayout forbiddenLinksPanelLayout = new javax.swing.GroupLayout(forbiddenLinksPanel);
        forbiddenLinksPanel.setLayout(forbiddenLinksPanelLayout);
        forbiddenLinksPanelLayout.setHorizontalGroup(
            forbiddenLinksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(forbiddenLinksPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(forbiddenLinksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, forbiddenLinksPanelLayout.createSequentialGroup()
                        .addComponent(forbiddenLinks_removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(forbiddenLinks_addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(forbiddenLinks_linkInput, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        forbiddenLinksPanelLayout.setVerticalGroup(
            forbiddenLinksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(forbiddenLinksPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(forbiddenLinks_linkInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(forbiddenLinksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(forbiddenLinks_removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(forbiddenLinks_addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        DepthLabel.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        DepthLabel.setText("parallel fetches");

        saveLocationLabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        saveLocationLabel.setText("asdasd");

        startFetchingButton.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        startFetchingButton.setText("start fetching");
        startFetchingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onStartFetchingButtonClicked(evt);
            }
        });

        parallelFetchesInput.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        parallelFetchesInput.setValue(8);

        saveButton.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        saveButton.setText("save to");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onSaveToButtonClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DepthLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(saveLocationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(parallelFetchesInput, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(startFetchingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(saveLocationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DepthLabel)
                    .addComponent(parallelFetchesInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(startFetchingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        jLabel4.setText("fail");

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        jLabel2.setText("fetching");

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        jLabel5.setText("success");

        monitor_fetching.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        monitor_fail.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel1.setText("Progress Monitor");

        monitor_success.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        jLabel6.setText("error");

        monitor_error.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        javax.swing.GroupLayout monitorPanelLayout = new javax.swing.GroupLayout(monitorPanel);
        monitorPanel.setLayout(monitorPanelLayout);
        monitorPanelLayout.setHorizontalGroup(
            monitorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(monitorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(monitorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, monitorPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(monitor_error, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(monitorPanelLayout.createSequentialGroup()
                        .addGroup(monitorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(monitorPanelLayout.createSequentialGroup()
                                .addGroup(monitorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(monitorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(monitor_fetching, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(monitor_fail, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(monitorPanelLayout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(monitor_success, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        monitorPanelLayout.setVerticalGroup(
            monitorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(monitorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(monitorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(monitor_fetching, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(10, 10, 10)
                .addGroup(monitorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(monitorPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(monitor_success, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(monitorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(monitor_fail, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(monitorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(monitor_error, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        forbitenLinks_enableButton.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        forbitenLinks_enableButton.setText("Forbidden names");
        forbitenLinks_enableButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                onForbitddenLinksEnableClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("SansSerif", 2, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 0));
        jLabel3.setText("Giannis Apostolidis, giannhs.apostolidhs@gmail.com");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(forbitenLinks_enableButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(forbiddenLinksPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(monitorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(forbitenLinks_enableButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(forbiddenLinksPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(monitorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onSaveToButtonClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onSaveToButtonClicked
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(this.OutputFile.getAbsoluteFile());
        chooser.setDialogTitle("Selecter output folder");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) { 
              this.OutputFile = chooser.getSelectedFile();
              saveLocationLabel.setText(this.OutputFile.toString());
        }
    }//GEN-LAST:event_onSaveToButtonClicked

    private void startingLinks_addButtonClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startingLinks_addButtonClicked
        String link = startingLinks_linkInput.getText();
        ListManager.addStringToList(link, startingLinks_links);
    }//GEN-LAST:event_startingLinks_addButtonClicked

    private void startingLinks_removeButtonClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startingLinks_removeButtonClicked
        ListManager.removeSelectedFromList(startingLinks_links);
    }//GEN-LAST:event_startingLinks_removeButtonClicked

    private void onForbitddenLinksEnableClicked(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_onForbitddenLinksEnableClicked
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            forbiddenLinkesEnable = true;
            forbiddenLinksPanel.setVisible(true);
        } else {
            forbiddenLinkesEnable = false;
            forbiddenLinksPanel.setVisible(false);
        }
    }//GEN-LAST:event_onForbitddenLinksEnableClicked

    private void forbiddenLinks_linkInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forbiddenLinks_linkInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_forbiddenLinks_linkInputActionPerformed

    private void forbiddenLinks_removeButtonClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forbiddenLinks_removeButtonClicked
        ListManager.removeSelectedFromList(forbiddenLinks_links);
    }//GEN-LAST:event_forbiddenLinks_removeButtonClicked

    private void onStartFetchingButtonClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onStartFetchingButtonClicked
        if(this.isFetching){
            fetchingThread.stop();
            onStopFetching();
        }else{
            monitorPanel.setVisible(true);
            final Collection<? extends String> startingUrls = 
                    ListManager.getValuesFromList(startingLinks_links);
            final Collection<? extends String> forbiddenUrls = 
                    forbiddenLinkesEnable ? ListManager.getValuesFromList(forbiddenLinks_links) : null;
            final String outputPath = OutputFile.getAbsolutePath();
            Object totalThreadsObj = parallelFetchesInput.getValue();
            if(totalThreadsObj==null)
                throw new IllegalArgumentException();
            final int totalThreads = Integer.parseInt(totalThreadsObj.toString());
            if(totalThreads<=0)
                throw new IllegalArgumentException();
            
            fetchingThread = (new Thread() {
                @Override
                public void run() {           
                    try {
                        onStartFetching();
                        CrawlerCore crawlerCore = new CrawlerCore(outputPath, totalThreads);
                        crawlerCore.addCrwalerListener( crawlerListener );
                        crawlerCore.crawl(startingUrls, forbiddenUrls);
                    } catch (Exception ex) {
                        Logger.getLogger(PonyCrawlerUi.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    onStopFetching();
                }
            });
            fetchingThread.start();
        }
    }//GEN-LAST:event_onStartFetchingButtonClicked

    private void forbiddenLinks_addButtonClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forbiddenLinks_addButtonClicked
        String link = forbiddenLinks_linkInput.getText();
        ListManager.addStringToList(link, forbiddenLinks_links);
    }//GEN-LAST:event_forbiddenLinks_addButtonClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PonyCrawlerUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PonyCrawlerUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PonyCrawlerUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PonyCrawlerUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PonyCrawlerUi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DepthLabel;
    private javax.swing.JLabel UrlLabel;
    private javax.swing.JPanel forbiddenLinksPanel;
    private javax.swing.JButton forbiddenLinks_addButton;
    private javax.swing.JTextField forbiddenLinks_linkInput;
    private javax.swing.JList forbiddenLinks_links;
    private javax.swing.JButton forbiddenLinks_removeButton;
    private javax.swing.JCheckBox forbitenLinks_enableButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel monitorPanel;
    private javax.swing.JLabel monitor_error;
    private javax.swing.JLabel monitor_fail;
    private javax.swing.JLabel monitor_fetching;
    private javax.swing.JLabel monitor_success;
    private javax.swing.JSpinner parallelFetchesInput;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel saveLocationLabel;
    private javax.swing.JButton startFetchingButton;
    private javax.swing.JButton startingLinks_addButton;
    private javax.swing.JTextField startingLinks_linkInput;
    private javax.swing.JList startingLinks_links;
    private javax.swing.JButton startingLinks_removeButton;
    // End of variables declaration//GEN-END:variables

    private void onStopFetching() {
        isFetching = false;
        startingLinks_removeButton.setEnabled(true);
        startingLinks_addButton.setEnabled(true);
        forbiddenLinks_removeButton.setEnabled(true);
        forbiddenLinks_addButton.setEnabled(true);
        startingLinks_links.setEnabled(true);
        forbiddenLinks_links.setEnabled(true);
        startingLinks_linkInput.setEnabled(true);
        forbiddenLinks_linkInput.setEnabled(true);
        saveButton.setEnabled(true);
        parallelFetchesInput.setEnabled(true);
        forbitenLinks_enableButton.setEnabled(true);
        startFetchingButton.setText("start fetching");
    }
    
    private void onStartFetching() {
        isFetching = true;
        startingLinks_removeButton.setEnabled(false);
        startingLinks_addButton.setEnabled(false);
        forbiddenLinks_removeButton.setEnabled(false);
        forbiddenLinks_addButton.setEnabled(false);
        startingLinks_links.setEnabled(false);
        forbiddenLinks_links.setEnabled(false);
        forbiddenLinks_linkInput.setEnabled(false);
        startingLinks_linkInput.setEnabled(false);
        saveButton.setEnabled(false);
        parallelFetchesInput.setEnabled(false);
        forbitenLinks_enableButton.setEnabled(false);
        startFetchingButton.setText("stop fetching");
    }
    
    private final CrawlerListener crawlerListener = new CrawlerListener() {

        @Override
        public void startFetching(String url) {
            if(isFetching){
                monitor_fetching.setText(url);
            }
        }

        @Override
        public void pageSuccessFetched(PageInfo pageinfo, String storageLocation) {
            if(isFetching){
                monitor_success.setText(pageinfo.getUrl());
            }
        }

        @Override
        public void pageFailFetched(String url) {
            if(isFetching){
                monitor_fail.setText(url);
            }
        }

        @Override
        public void finishAllFetches() {
            if(isFetching){
                System.out.println("finishAllFetches");
            }
        }
    };
}
