/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package PonySolution.ui;

import PonySearcher.Search;
import PonySearcher.VectorSpaceRankingPolicy;
import java.io.FileNotFoundException;
import java.io.IOException;
import static java.lang.Thread.sleep;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Apostolidis
 */
public class LoadingVocabularPanel extends javax.swing.JPanel {
    private PonyUi ponyUi;
    private Thread loadingthread;
    private boolean idLoading;
    /**
     * Creates new form LoadingVocabularPanel
     */
    public LoadingVocabularPanel(PonyUi ponyUi) {
        initComponents();
        this.ponyUi = ponyUi;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lv_loadingTitleLabel = new javax.swing.JLabel();
        lv_loadingmsgLabel = new javax.swing.JLabel();
        lv_loadingBar = new javax.swing.JLabel();

        lv_loadingTitleLabel.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        lv_loadingTitleLabel.setText("Loading index folder");

        lv_loadingmsgLabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lv_loadingmsgLabel.setText("This procedure will take several seconds");

        lv_loadingBar.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        lv_loadingBar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lv_loadingBar.setText("...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lv_loadingTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lv_loadingmsgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(lv_loadingBar, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(141, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lv_loadingTitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lv_loadingBar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(lv_loadingmsgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(160, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lv_loadingBar;
    private javax.swing.JLabel lv_loadingTitleLabel;
    private javax.swing.JLabel lv_loadingmsgLabel;
    // End of variables declaration//GEN-END:variables

    void stopLoading() {
        idLoading=false;
    }

    void startLoading() {
        idLoading = true;
        loadingthread = (new Thread() {
            @Override
            public void run() {           
                try {
                    while(idLoading){
                        sleep(500);
                        String bar = lv_loadingBar.getText();
                        if(bar.length()>4){
                            lv_loadingBar.setText(".");
                        }else{
                            lv_loadingBar.setText( bar + ".");
                        }
                    }     
                } catch (InterruptedException ex) {
                    Logger.getLogger(LoadingVocabularPanel.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        });
        loadingthread.start();
    }
}
